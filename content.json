{"pages":[{"title":"About Me","text":"无名之辈","link":"/about/index.html"},{"title":"","text":"WIDGET = {FID: 'lYJ94FouCD'} 谷歌 必应 百度 常用网址 收藏夹","link":"/navi/index.html"},{"title":"","text":"{\"categories\":[{\"name\":\"公司\",\"sites\":[{\"title\":\"OA\",\"url\":\"https://oa.huya.com/index.html#/mains\"},{\"title\":\"日志后台\",\"url\":\"https://ffilelogweb.huya.com/indexpage.html\"},{\"title\":\"YY UID查询\",\"url\":\"http://webdb.yyembed.yy.com/webdb\"},{\"title\":\"jenkins构建\",\"url\":\"https://jenkins.huya.com/\"},{\"title\":\"看板-主播基础平台组-TAPD平台\",\"url\":\"https://www.tapd.cn/39551029/board/index?board_id=1139551029001000094&board_type=standard&view_type=standard-board\"},{\"title\":\"sre业务支持系统\",\"url\":\"https://sre.huya.com/\"},{\"title\":\"游戏直播管理后台\",\"url\":\"http://admin.huya.com/login/\"}]},{\"name\":\"C++\",\"sites\":[{\"title\":\"cppreference\",\"url\":\"https://en.cppreference.com/w/\"},{\"title\":\"C++ Core Guidelines\",\"url\":\"https://github.com/isocpp/CppCoreGuidelines/blob/master/CppCoreGuidelines.md\"},{\"title\":\"coliru在线编译\",\"url\":\"http://coliru.stacked-crooked.com/\"},{\"title\":\"7 Features of C++17 that will simplify your code\",\"url\":\"https://www.codingame.com/playgrounds/2205/7-features-of-c17-that-will-simplify-your-code/introduction\"}]},{\"name\":\"Unity\",\"sites\":[{\"title\":\"2018.4文档\",\"url\":\"https://docs.unity3d.com/2018.4/Documentation/Manual/\"},{\"title\":\"UGUI基础！界面拼接！\",\"url\":\"https://zhuanlan.zhihu.com/p/28905447\"},{\"title\":\"Unity - Manual: Execution Order of Event Functions\",\"url\":\"https://docs.unity3d.com/2018.2/Documentation/Manual/ExecutionOrder.html\"},{\"title\":\"Unity - Manual: Getting started with Android development\",\"url\":\"https://docs.unity3d.com/Manual/android-GettingStarted.html\"},{\"title\":\"Unity教程 用户界面（UI）_w3cschool\",\"url\":\"https://www.w3cschool.cn/unity3d_jc/unity3d_jc-8lea2dkb.html\"},{\"title\":\"Unity 2018.4 中文手册 中文文档\",\"url\":\"https://unity2018.docs.zlogn.com/\"},{\"title\":\"Unity Play Video On Canvas | Learn Unity Mir Imad Ahmed\",\"url\":\"https://www.mirimad.com/unity-play-video-on-canvas/\"},{\"title\":\"Video - Change/Detect video orientation\",\"url\":\"https://forum.unity.com/threads/change-detect-video-orientation.546450/\"},{\"title\":\"360 VIDEO PLAYER (with VR mode) - Unity Tutorial - YouTube\",\"url\":\"https://www.youtube.com/watch?v=RxlQnPcOoYc\"}]},{\"name\":\"Android\",\"sites\":[{\"url\":\"https://my.oschina.net/lifj/blog/709188\",\"title\":\"［直播一揽子］x264 for Android 的编译\"},{\"url\":\"https://blog.csdn.net/chinabinlang/article/details/46898961\",\"title\":\"X264的ARMV7-a的交叉编译及优化运行\"},{\"url\":\"https://blog.csdn.net/xyang81/article/details/42319789\",\"title\":\"Android NDK开发Crash错误定位\"},{\"url\":\"https://www.jianshu.com/p/73fed068a795\",\"title\":\"Android Camera2 使用总结\"},{\"url\":\"https://www.jianshu.com/p/d83161e77e90\",\"title\":\"Android进阶——你所知道的Camera2和你所不知道的Camera2完全解析\"},{\"url\":\"https://source.android.com/devices/graphics/arch-egl-opengl\",\"title\":\"EGLSurface 和 OpenGL ES | Android Open Source Project\"},{\"url\":\"https://www.jianshu.com/p/c085af435d88\",\"title\":\"「音视频直播技术」Android下视频H264编码\"},{\"url\":\"https://juejin.im/post/5aefdb2c51882522835e6542\",\"title\":\"《OpenGL ES 2.0 for Android》读书笔记\"},{\"url\":\"https://www.khronos.org/registry/EGL/\",\"title\":\"Khronos EGL Registry - The Khronos Group Inc\"},{\"url\":\"https://developer.android.com/training/graphics/opengl/environment#java\",\"title\":\"Build an OpenGL ES environment | Android Developers\"},{\"url\":\"https://source.android.com/devices/graphics/architecture.html\",\"title\":\"图形架构 | Android Open Source Project\"},{\"url\":\"https://blog.csdn.net/cmsbupt/article/details/9815685\",\"title\":\"Android系统中YUV420p (NV21)到ARGB8888的转换\"},{\"url\":\"https://mp.weixin.qq.com/s/0xek4nnc2zoKpslEyILQmw?comefrom=https://blogread.cn/news/\",\"title\":\"总是听到有人说AndroidX，到底什么是AndroidX？\"},{\"url\":\"https://developer.android.com/guide/topics/media/camera\",\"title\":\"Camera API | Android Developers\"},{\"url\":\"https://developer.android.com/ndk/guides/audio/opensl/opensl-prog-notes.html#kotlin\",\"title\":\"OpenSL ES 编程说明 | Android NDK | Android Developers\"},{\"url\":\"https://developer.android.com/ndk/guides/audio/opensl/opensl-for-android\",\"title\":\"面向 Android 的 OpenSL ES | Android NDK | Android Developers\"},{\"url\":\"https://developer.android.com/ndk/guides/stable_apis\",\"title\":\"Android NDK 原生 API | Android Developers\"},{\"url\":\"http://www.soomal.com/doc/10100006276.htm\",\"title\":\"Gabor、Patrick作品 - Android的10毫秒问题 解读Android系统音频通道延迟缺陷[Soomal]\"},{\"url\":\"https://developer.android.com/ndk/guides/audio/audio-latency?hl=zh-cn\",\"title\":\"音频延迟 | Android NDK | Android Developers\"}]},{\"name\":\"TCP/IP\",\"sites\":[{\"url\":\"https://gist.github.com/gabrielfalcao/4216897\",\"title\":\"TCP socket error codes\"},{\"url\":\"https://blog.csdn.net/tianlongtc/article/details/80238497\",\"title\":\"TCP快速重传为什么是三次冗余ack\"},{\"url\":\"https://www.zhihu.com/question/21789252\",\"title\":\"TCP快速重传为什么是三次冗余ack，这个三次是怎么定下来的？\"},{\"url\":\"https://www.cnblogs.com/wetest/p/9190786.html\",\"title\":\"可靠UDP，KCP协议快在哪？\"},{\"url\":\"https://blog.csdn.net/qq_36748278/article/details/80171575\",\"title\":\"KCP原理及源码解析\"},{\"url\":\"https://chromium.googlesource.com/chromium/src/+/master/docs/windows_build_instructions.md\",\"title\":\"Checking out and Building Chromium for Windows\"},{\"url\":\"http://jagt.github.io/clumsy/cn/manual.html\",\"title\":\"clumsy, 在 Windows Vista / Windows 7 下模拟劣化网络环境(网络延迟，掉包，重发)的小工具。\"},{\"url\":\"https://zhuanlan.zhihu.com/p/32553477\",\"title\":\"科普：QUIC协议原理分析\"}]},{\"name\":\"iOS\",\"sites\":[{\"url\":\"https://www.jianshu.com/p/eccdcf43d7d2\",\"title\":\"iOS视频开发（一）：视频采集\"},{\"url\":\"https://blog.csdn.net/lincsdnnet/article/details/78255773\",\"title\":\"iOS - 视频采集详解\"},{\"url\":\"https://www.jianshu.com/p/9809760654ea\",\"title\":\"iOS-镜头采集(AVCaptureDevice)\"},{\"url\":\"https://www.jianshu.com/p/019f59a37e1e\",\"title\":\"iOS-镜头采集(Camera capture&amp;AVCaptureSession)\"},{\"url\":\"https://www.jianshu.com/p/d99366dd19e4\",\"title\":\"iOS 相机捕捉\"},{\"url\":\"https://www.jianshu.com/p/8b28892bae5a\",\"title\":\"30分钟搞定iOS自定义相机\"},{\"url\":\"https://www.jianshu.com/p/8c7ca1dd7f02\",\"title\":\"iOS-AVFoundation自定义相机详解\"},{\"url\":\"https://stackoverflow.com/questions/588866/whats-the-difference-between-the-atomic-and-nonatomic-attributes\",\"title\":\"ios - What's the difference between the atomic and nonatomic attributes? - Stack Overflow\"},{\"url\":\"https://github.com/skyming/iOS-Performance-Optimization\",\"title\":\"skyming/iOS-Performance-Optimization: 关于iOS 性能优化梳理、内存泄露、卡顿、网络、GPU、电量、 App 包体积瘦身、启动速度优化等、Instruments 高级技巧、常见的优化技能- Get — Edit\"},{\"url\":\"https://github.com/qinjx/30min_guides/blob/master/ios.md\",\"title\":\"30min_guides/ios.md at master · qinjx/30min_guides\"},{\"url\":\"https://stackoverflow.com/questions/5887248/ios-app-maximum-memory-budget\",\"title\":\"iphone - ios app maximum memory budget - Stack Overflow\"},{\"url\":\"https://blog.csdn.net/bxjie/article/details/39581565\",\"title\":\"关于airplay协议实现镜像功能研究\"},{\"url\":\"https://depthlove.github.io/2015/09/16/build-X264-library-for-iOS-platform/\",\"title\":\"编译iOS平台上使用的X264库 | Minmin.Sun Blog\"}]},{\"name\":\"OpenGL ES\",\"sites\":[{\"url\":\"http://toughcoder.net/blog/2018/07/31/introduction-to-opengl-es-2-dot-0/\",\"title\":\"年轻人的第一篇OpenGL ES 2.0教程\"},{\"url\":\"https://blog.csdn.net/kesalin/column/info/opengl-es2-ios\",\"title\":\"OpenGL ES 2.0 iOS教程\"}]},{\"name\":\"Kotlin\",\"sites\":[{\"url\":\"https://www.kotlincn.net/docs/tutorials/android-plugin.html\",\"title\":\"Kotlin Android扩展\"}]},{\"name\":\"多媒体\",\"sites\":[{\"url\":\"http://blog.csdn.net/leixiaohua1020\",\"title\":\"雷神博客\"},{\"url\":\"http://blog.csdn.net/u011270282/article/details/42058617\",\"title\":\"h.264保存flv文件\"},{\"url\":\"http://blog.csdn.net/yeyumin89/article/details/7932368\",\"title\":\"将h.264视频流封装成flv格式文件（一.flv格式）\"},{\"url\":\"http://blog.csdn.net/yeyumin89/article/details/7932431\",\"title\":\"将h.264视频流封装成flv格式文件（二.开始动手）\"},{\"url\":\"https://segmentfault.com/a/1190000007361184\",\"title\":\"FLV文件格式解析\"},{\"url\":\"http://blog.csdn.net/leixiaohua1020/article/details/17934487\",\"title\":\"视音频编解码学习工程：FLV封装格式分析器\"},{\"url\":\"http://www.tuicool.com/articles/vu2Mvy\",\"title\":\"FLV视频封装格式详解\"},{\"url\":\"http://blog.csdn.net/zhuweigangzwg/article/details/25815851\",\"title\":\"音视频同步(播放)原理\"},{\"url\":\"http://developer.t-firefly.com/thread-5731-1-1.html\",\"title\":\"音视频同步和视频帧率控制的原理和实现\"},{\"url\":\"http://blog.csdn.net/Byeweiyang/article/details/78134674\",\"title\":\"实时视频传输的关键技术 H.264 全解析\"},{\"url\":\"http://blog.csdn.net/shangmingyang/article/details/50837852\",\"title\":\"带你吃透RTMP\"},{\"url\":\"http://blog.csdn.net/liuxingen/article/details/45420455\",\"title\":\"字节序(byte order)和位序(bit order)\"},{\"url\":\"https://blog.csdn.net/leixiaohua1020/article/details/11694129\",\"title\":\"RTMP规范简单分析\"},{\"url\":\"https://my.oschina.net/u/213072/blog/52053\",\"title\":\"FLV视频封装格式详解\"},{\"url\":\"https://depthlove.github.io/2015/11/13/flv-analysis-in-rtmp-live-play/\",\"title\":\"rtmp直播推流（一）－－flv格式解析与封装 | Minmin.Sun Blog\"},{\"url\":\"https://blog.csdn.net/sphone89/article/details/17492433\",\"title\":\"h264 profile &amp; level\"},{\"url\":\"http://www.lighterra.com/papers/videoencodingh264/\",\"title\":\"Video Encoding Settings for H.264 Excellence\"}]},{\"name\":\"FFmpeg\",\"sites\":[{\"url\":\"https://blog.csdn.net/leixiaohua1020\",\"title\":\"雷神博客\"},{\"url\":\"https://www.ffmpeg.org/ffmpeg-filters.html#format-1\",\"title\":\"FFmpeg Filters Documentation\"},{\"url\":\"https://blog.csdn.net/fireroll/article/details/8607954\",\"title\":\"为ffmpeg添加自定义滤镜\"},{\"url\":\"https://blog.csdn.net/dancing_night/article/details/46348515\",\"title\":\"把自定义的demuxer加入ffmpeg源码\"},{\"url\":\"https://blog.csdn.net/wstarx/article/details/1572393\",\"title\":\"FFMpeg框架代码阅读\"},{\"url\":\"https://blog.csdn.net/m0_37402140/article/details/77963538\",\"title\":\"ffmpeg八大模块及常用函数介绍\"},{\"url\":\"https://blog.csdn.net/leixiaohua1020/article/details/15811977\",\"title\":\"[总结]FFMPEG视音频编解码零基础学习方法\"},{\"url\":\"https://juejin.im/post/5cad73425188251aee3a5624\",\"title\":\"三、ffplay、ffmpeg日常食用的简单姿势\"},{\"url\":\"https://blog.csdn.net/Contex_A17/article/details/82014826\",\"title\":\"ffmpeg倒放音视频\"},{\"url\":\"https://blog.csdn.net/vbLittleBoy/article/details/8587745\",\"title\":\"关于ffmpeg如何提取视频的关键帧的问题\"},{\"url\":\"https://www.jianshu.com/p/0f2d762c4d1d\",\"title\":\"FFMpeg中seek函数解析\"},{\"url\":\"https://blog.csdn.net/leixiaohua1020/article/details/44220151\",\"title\":\"FFmpeg源代码结构图 - 解码\"},{\"url\":\"https://blog.csdn.net/CHNIM/article/details/80852806\",\"title\":\"ffmpeg实现视频倒播（基于opencv方法）\"},{\"url\":\"https://stackoverflow.com/questions/42257354/concat-a-video-with-itself-but-in-reverse-using-ffmpeg\",\"title\":\"Concat a video with itself, but in reverse, using ffmpeg - Stack Overflow\"},{\"url\":\"https://blog.csdn.net/ternence_hsu/article/details/85865718\",\"title\":\"ffmpeg 视频倍速播放 和 慢速播放\"},{\"url\":\"https://zhuanlan.zhihu.com/p/44615185\",\"title\":\"ffplay音视频同步分析——基础概念\"},{\"url\":\"https://juejin.im/post/5cad790f51882518b87e1404\",\"title\":\"十、详解FFplay音视频同步\"},{\"url\":\"https://blog.csdn.net/lrzkd/article/details/78661841\",\"title\":\"ffplay播放器音视频同步原理\"},{\"url\":\"https://my.oschina.net/u/735973/blog/806117\",\"title\":\"ffmpeg音视频同步---视频同步到音频时钟\"},{\"url\":\"https://superuser.com/questions/1189472/make-a-clip-from-a-video-with-ffmpeg\",\"title\":\"Make a clip from a video with FFMPEG\"}]},{\"name\":\"CMake\",\"sites\":[{\"url\":\"https://www.cnblogs.com/zl1991/p/6526613.html\",\"title\":\"CMakeLists.txt写法\"},{\"url\":\"https://elloop.github.io/tools/2016-04-10/learning-cmake-2-commands\",\"title\":\"CMake 常用命令和变量\"},{\"url\":\"https://blog.csdn.net/a794226986/article/details/18616511\",\"title\":\"cmake处理多源文件目录的方法\"},{\"url\":\"https://stackoverflow.com/questions/52183875/create-cmake-c-c-library-to-android-without-android-studio\",\"title\":\"Create (Cmake) C/C++ Library to Android without Android Studio\"},{\"url\":\"https://owent.net/2017/1405.html\",\"title\":\"用cmake交叉编译到iOS和Android\"},{\"url\":\"https://fucknmb.com/2017/06/27/cmake-%E4%BA%A4%E5%8F%89%E7%BC%96%E8%AF%91/\",\"title\":\"cmake交叉编译\"},{\"url\":\"https://zhuanlan.zhihu.com/p/24535328\",\"title\":\"更简单的CMake交叉编译\"}]},{\"name\":\"Lua\",\"sites\":[{\"url\":\"https://www.w3cschool.cn/doc_lua_5_3/dict\",\"title\":\"Lua 5.3 词典 速查词典|Lua 5.3 词典 API中文手册|Lua 5.3 词典参考文档_w3cschool\"},{\"url\":\"https://wowwiki.fandom.com/wiki/WoW_AddOn\",\"title\":\"WoW AddOn | WoWWiki | FANDOM powered by Wikia\"},{\"url\":\"https://wowwiki.fandom.com/wiki/UI_FAQ/AddOn_Author_Resources#Resources\",\"title\":\"UI FAQ/AddOn Author Resources | WoWWiki | FANDOM powered by Wikia\"},{\"url\":\"https://bbs.nga.cn/read.php?tid=14839516\",\"title\":\"[狂暴][PVE]8.2争霸艾泽拉斯狂暴专精指南[08/20更新狂暴战8.2版本木桩讲解视频] NGA玩家社区\"},{\"url\":\"http://wowprogramming.com/\",\"title\":\"Home Page - World of Warcraft Programming: A Guide and Reference for Creating WoW Addons\"},{\"url\":\"https://github.com/LewisJEllis/awesome-lua\",\"title\":\"LewisJEllis/awesome-lua: A curated list of quality Lua packages and resources.\"},{\"url\":\"https://luarocks.org/\",\"title\":\"LuaRocks - The Lua package manager\"},{\"url\":\"https://bbs.nga.cn/read.php?tid=17358638\",\"title\":\"[教程] 提取魔兽世界的编码文件和美工文件+替换技能图标+常用工具 NGA玩家社区\"},{\"url\":\"https://warcraft.huijiwiki.com/wiki/%E6%8F%92%E4%BB%B6%E7%BC%96%E5%86%99%E4%BB%8B%E7%BB%8D\",\"title\":\"插件编写介绍 - 魔兽世界中文维基，自由编辑的魔兽资料库 - 灰机wiki\"},{\"url\":\"http://www.waitingfy.com/archives/1047\",\"title\":\"《魔兽世界插件》教程—21点扑克游戏 Blackjack | Waiting For You\"}]},{\"name\":\"其它\",\"sites\":[{\"url\":\"https://deerchao.cn/tutorials/regex/regex.htm\",\"title\":\"正则30分钟教程\"},{\"url\":\"https://www.cnblogs.com/liuxianan/p/build-blog-website-by-hexo-github.html\",\"title\":\"使用hexo+github搭建免费个人博客详细教程\"},{\"url\":\"https://www.zhihu.com/question/28889256\",\"title\":\"哪一句日常用的英语很简单但是格调和品位很高？\"}]}]}","link":"/navi/favorite.json"},{"title":"","text":"{\"sites\":[{\"url\":\"https://aplus.huya.com/#/home/buildProject/index\",\"title\":\"构建系统\"},{\"url\":\"https://ermao.live/\",\"title\":\"我的博客\"},{\"url\":\"https://github.com/\",\"title\":\"github\"},{\"url\":\"https://stackoverflow.com/\",\"title\":\"stackoverflow\"},{\"url\":\"https://en.cppreference.com/w/\",\"title\":\"cppreference\"},{\"url\":\"https://www.ffmpeg.org/documentation.html\",\"title\":\"FFmpeg文档\"},{\"url\":\"https://tech.sina.com.cn/\",\"title\":\"新浪科技\"},{\"url\":\"https://maimai.cn/gossip_list\",\"title\":\"脉脉\"},{\"url\":\"https://www.zhihu.com/\",\"title\":\"知乎\"},{\"url\":\"https://weibo.com/liangzuoting/home?wvr=5\",\"title\":\"微博\"},{\"url\":\"https://v.qq.com/\",\"title\":\"腾讯视频\"},{\"url\":\"https://www.youku.com/\",\"title\":\"优酷\"},{\"url\":\"https://www.douyu.com/62081\",\"title\":\"叶落直播间\"},{\"url\":\"https://www.huya.com/11352915\",\"title\":\"老白涮肉坊\"},{\"url\":\"https://www.tmall.com/\",\"title\":\"天猫\"},{\"url\":\"https://www.taobao.com/\",\"title\":\"淘宝\"},{\"url\":\"https://www.ctrip.com/\",\"title\":\"携程\"}]}","link":"/navi/oftenuse.json"},{"title":"","text":"body { background-color:#555555; font-family: \"Source Code Pro\", monospace, \"Microsoft YaHei\"; } .default-div { width: 100%; text-align: center; padding-top: 40px; } .search-input:required, .search-input:invalid { box-shadow: none; } .search-input { width: 50%; border: 0; border-bottom: 2px solid #9b9b9b; outline: 0; font-size: 16px; color: #fff; padding: 7px 0; background: transparent; transition: border-color 0.2s; } input { text-rendering: auto; color: -internal-light-dark-color(black, white); letter-spacing: normal; word-spacing: normal; text-transform: none; text-indent: 0px; text-shadow: none; display: inline-block; text-align: start; -webkit-appearance: textfield; background-color: -internal-light-dark-color(white, black); -webkit-rtl-ordering: logical; cursor: text; margin: 0em; padding: 1px 0px; border-width: 2px; border-style: inset; border-color: initial; border-image: initial; } .common-button { border:0; display:inline-block; background-color:#e67e22; cursor:pointer; color:#ffffff; font-family:Microsoft YaHei; font-size:16px; padding:8px 18px; text-decoration:none; text-shadow:1px 1px 0px #2f6627; } .common-button:hover { background-color:#bf6516; } h2 { color:#eeeeee; } table { padding: 0px 15%; width: 100%; text-align: center; } td { width: 10%; padding: 0px 0px 30px 0px; font-size: 20px; } a:hover { text-decoration:underline; } a:active, a:hover { outline: 0; } a { background: transparent; text-decoration:none; color: #1b1; } hr { align: center; width: 80%; height: 1px; border-width: 0; background-color: #666; noshade: noshade; } select { -webkit-appearance: none; -moz-appearance: none; appearance: none; width: 250px; height: 40px; padding: 0px 10px; font-size: 20px; background-color: #03e; color: #0b0; border: 0; }","link":"/navi/navi.css"},{"title":"","text":"function toGoogle() { let param = document.getElementById(\"searchKey\").value window.open(\"https://www.google.com/search?q=\" + param, \"_blank\") } function toBing() { let param = document.getElementById(\"searchKey\").value window.open(\"https://cn.bing.com/search?q=\" + param, \"_blank\") } function toBaidu() { let param = document.getElementById(\"searchKey\").value window.open(\"https://www.baidu.com/s?wd=\" + param, \"_blank\") } function loadOftenUse() { let request = new XMLHttpRequest(); request.open(\"get\", \"oftenuse.json\"); request.responseType = \"text\"; request.send(); request.onload = function() { let table = document.getElementById(\"oftenTable\"); let data = request.response; let root = JSON.parse(data); let sites = root[\"sites\"]; let row; for (let i = 0; i < sites.length; ++i) { if (i % 6 == 0) { row = table.insertRow(i / 6); } let cell = row.insertCell(i % 6); let site = sites[i]; let a = document.createElement(\"a\"); cell.appendChild(a); a.style.fontSize = 24; a.href = site.url; a.text = site.title; a.target = \"_blank\"; } }; } function loadFavorite() { let request = new XMLHttpRequest(); request.open(\"get\", \"favorite.json\"); request.responseType = \"text\"; request.send(); request.onload = function() { let table = document.getElementById(\"favoriteTable\"); let data = request.response; let root = JSON.parse(data); let categories = root[\"categories\"]; let row; for (let i = 0; i < categories.length; ++i) { let category = categories[i]; if (i % 4 == 0) { row = table.insertRow(i / 4); } let cell = row.insertCell(i % 4); let sel = document.createElement(\"select\"); cell.appendChild(sel); sel.addEventListener(\"change\", function() { window.open(sel.value, \"_blank\"); sel.selectedIndex = 0; }); let head = document.createElement(\"option\"); sel.appendChild(head); head.text = category.name; head.disabled = true; head.selected = true; let sites = category.sites; for (let i = 0; i < sites.length; ++i) { let site = sites[i]; let op = document.createElement(\"option\"); sel.appendChild(op); op.value = site.url; op.text = site.title; } } }; } function onLoad() { loadOftenUse(); loadFavorite(); }","link":"/navi/navi.js"}],"posts":[{"title":"C++ Core Guidelines 摘要渣翻","text":"C++ Core Guidelines 项目地址 C++ Core Guidelines 是一份由 Bjarne Stroustrup 和 Herb Sutter 共同编写的现代 C++ 编程指南，其权威性无可置疑。如果你已可以畅用 C++11 及以上版本，那么这份白皮书是不可不悉心研读的了。 本摘要仅作备忘之用，内容或只适用于本人，强烈建议你通读原文","link":"/2020/01/22/CPP-Core-Guidelines-Summary/"},{"title":"2020年学习规划","text":"2020年会整体围绕StreamingCore项目运作。先期会先做一部分复习工作，比如C++相关、工程相关；其它所列知识点会边学边应用。 尽量详细地列出各项，不断回顾并更新进度。 理论知识复习C++ 《C++ Primer》 ❌ 《Effective Modern C++》 ❌ 《C++标准库》 ❌ 《Effective STL》 ❌ 复习《设计模式》 ❌复习《Kotlin语言官方参考文档》 ❌学习《Swift编程权威指南》 ❌多媒体技术FFmpeg应用能力 ❌ 这里简述成果 OpenGL ES应用能力 ❌ 这里简述成果 Android平台多媒体接口应用 MediaCodec ❌ Camera ❌ Camera2 ❌ iOS平台多媒体接口应用 Audio Unit ❌ AVCapture ❌ ReplayKit ❌ AudioToolBox ❌ VideoToolBox ❌ libx264应用能力 ❌","link":"/2019/12/20/2020-planning/"},{"title":"新旅程","text":"最近一年工作上比较无趣。除花了一个季度的工时搞定了滤镜库外，可以说在公司内毫无技术上的收获。连这仅有的输出，在队伍壮大后也拱手送人了。 每天都在焦虑中度过。 上级再次把短视频团队的指挥棒交到了我手里，威逼利诱之下，我准备接受了。以此记之，我的管理生涯的正式开启。 但内心还是一个只想写代码的码农罢了，又以此记之，我失去了工作乐趣的今天。","link":"/2019/11/26/an-all-new-travel/"},{"title":"StreamingCore项目介绍","text":"是时候驻足整装了明年的业余时间会集中在这个StreamingCore项目上。进入直播行业也有六七年时间了，这将是我迄今的职业生涯中最重要的一份总结。 如同其名，StreamingCore将是一套直播核心流程的解决方案，集成采集、编码、推流功能，同时支持Android和iOS两端。借鉴FFmpeg的设计思想，StreamingCore也会以模块化架构实现，允许独立使用某一功能模块。同一功能模块，或许会提供多套实现方案，以供比较选择。 暂拟定的功能模块音频采集模块 OpenSL ES implementation for Android AudioRecord implementation for Android Audio Unit implementation for iOS 图像采集模块 Implementation based on Camera interface for Android Implementation based on Camera2 interface for Android Implementation based on Virtual Display for Android Implementation based on AVFoundation framework for iOS Implementation based on ReplayKit for iOS 音频编码模块 Audio Encoder implementation based on MediaCodec for Android Audio Encoder implementation based on AudioToolBox for iOS 视频编码模块 Video Encoder implementation based on MediaCodec for Android Video Encoder implementation based on VideoToolBox for iOS 推流模块 Streaming by Rtmp Protocol Streaming by custom Protocol based on UDP 各个模块将暴露标准化接口，供扩展实现。 我不喜欢Java和Objective-C或者反过来说，我喜欢Kotlin和Swift。够简洁，够现代化，这就足够了。公司业务已呈现尾大不掉、积重难返之态，更加之KPI当头，相关负责人没有勇气切换到新的开发环境。我已学的Kotlin，我想学的Swift，几无用武之地，这也是我萌生实施此项目的一个重要原因。 同样基于这个技术决定，项目质量无从保证。成品后能否被接入方接受，就更难说了…… 大概的开发计划 时间周期为一年（2020.1.1——2020.12.31） 先Android端全功能，再iOS端","link":"/2019/12/19/about-streaming-core/"},{"title":"在 Unity 项目中使用 OpenFileDialog 实现选择文件功能","text":"开发阶段用的是 UnityEditor.EditorUtility.OpenFilePanel() 函数，简单易用。但是如其名所示，UnityEditor 只在 Unity 编辑器内可见，尝试 build 出 Windows 下 standalone 包时会报编译错误。 解决办法是用 mono 库下的相应功能实现打开文件。 在 Unity 安装根目录的 \\Editor\\Data\\Mono\\lib\\mono\\2.0\\ 路径下找到并复制 System.Windows.Forms.dll 粘贴 dll 文件到 Unity 项目的 Assets\\Plugins\\ 目录 PlayerSettings 中 Api Compatibility Level 选项值从默认的 .NET Standard 2.0 调整为 .NET 4.x 此时，dll 在 Unity 项目中变为可见，可以在脚本文件中使用 dll 中任意功能了。 选择文件对话框通过 System.Windows.Forms.OpenFileDialog 类实现，一个典型用法如下： 12345678System.Windows.Forms.OpenFileDialog ofd = new System.Windows.Forms.OpenFileDialog();ofd.Filter = &quot;Video Files(*.mp4;*.flv)|*.mp4;*.flv&quot;;ofd.RestoreDirectory = true;if (ofd.ShowDialog() != System.Windows.Forms.DialogResult.OK){ return; // user clicked cancel.}var filePath = ofd.FileName; //filePath holds the file&apos;s full path. 具体用例参考我的 XOPlayer项目 issues: mono 实现的 OpenFileDialog 太丑了……是非基于宿主系统原生实现的。我用的 Unity 2018.4.14f1 提供的是 mono 2.0 版本，不知是否跟 mono 版本过旧有关。","link":"/2020/01/15/using-OpenFileDialog-in-Unity/"},{"title":"西安行有感","text":"西安一行，让我对地方美食文化的传播有了一些自己的思考。 比如凉皮、肉夹馍，味道跟我在广州吃到的一些无异，因为本身就是大众口味，制作也简单，应该是被原样继承了下来的。 一个反例是羊杂汤。在我们老家，羊杂汤、羊肉汤在制作流程上是一样的，无非是内容差别，所以最后呈现的味道，也大体是一样的。但是在西安，羊杂汤跟羊肉汤（水盆羊肉），简直是天差地别的两个东西。所谓正宗羊杂汤的味道，怕是非少数人不可承受吧？ 但是我不知道这两个东西是不是源自一处，也不知道我们老家的羊汤是不是源自西安。也许只是我道听途说惯了，给自己错误的植入了“天下羊汤出西安”的记忆？所以这句话就当做是免责声明了吧。 总之，经历了这么多次国内旅行，我已经对正宗地道的地方菜有了免疫。在家门口吃到的，都是经过演绎变化，做成了适合你口味的罢了。好吃却在别的地方做不出来、发展不起来的菜我反而没见过。所以不必太计较于是不是正宗，更没必要对发源地心心念念。 话虽如此，对西安的失望却尤其难以抚慰，那是我念叨了小半辈子的地方……","link":"/2019/12/10/xian-travel/"},{"title":"FFmpeg 常用命令合集","text":"1.视频剪辑ffmpeg -ss 300 -t 600 -i c:\\input.mp4 c:\\output.mp4 从 input.mp4 的 300s 处开始剪辑，时长 600s，保存到 output.mp4。 note: -ss -t 参数都可应用于输入或输出(ffmpeg -i c:\\input.mp4 -ss 300 -t 600 c:\\output.mp4)上，区别在于：-ss 应用于输入时有性能优势，会先跳转到时间点再进行解码；用于输出时会逐帧解码并丢弃时间点前的所有帧。 2.下载视频ffmpeg -i &quot;https://us.sinaimg.cn/0013JKJ9jx07aaEhInRC0104010094440k01.mp4?label=mp4_hd&amp;Expires=1579700718&amp;ssig=wkpUBmK%2B9Y&amp;KID=unistore,video&quot; d:\\output.mp4 从 -i 标识的 url 下载视频保存到 output.mp4。 note: url 包含特殊字符(空格、&amp; 等)时，必须用双引号包含 url 才能正确解析；输出路径同理。","link":"/2020/01/21/ffmpeg-often-used-commands/"}],"tags":[{"name":"C++","slug":"C","link":"/tags/C/"},{"name":"Unity","slug":"Unity","link":"/tags/Unity/"},{"name":"mono","slug":"mono","link":"/tags/mono/"},{"name":"西安","slug":"西安","link":"/tags/%E8%A5%BF%E5%AE%89/"}],"categories":[{"name":"C++","slug":"C","link":"/categories/C/"},{"name":"杂记","slug":"杂记","link":"/categories/%E6%9D%82%E8%AE%B0/"},{"name":"StreamingCore","slug":"StreamingCore","link":"/categories/StreamingCore/"},{"name":"Unity","slug":"Unity","link":"/categories/Unity/"},{"name":"FFmpeg","slug":"FFmpeg","link":"/categories/FFmpeg/"}]}